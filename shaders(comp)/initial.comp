#version 460 core
#define PI 3.141592653589

layout(local_size_x = 7, local_size_y = 2, local_size_z = 7) in;
layout(rgba32f, binding = 0) uniform image2D imgOutput;
layout(rgba32f, binding = 1) uniform image2D data;

uniform mat4 viewmat;
uniform float time;

vec2 res = vec2(700, 100);
mat2 i;
mat2 r = mat2(1.0f);

vec4 recursion(vec2 num);

void main()
{
    //float angle = sin(time);
    i[0] = vec2(0, 1);
    i[1] = vec2(-1, 0);

    ivec2 texCoords = ivec2(gl_GlobalInvocationID.xy);
    int zCoord = int(gl_GlobalInvocationID.z);
    //vec2 pos = vec2(mat3(transpose(viewmat))*vec3(texCoords, 1));
    vec2 pos = vec2(texCoords)/res;
    //float height = exp(-dot(pos,pos));
    texCoords.y += (zCoord)*100;
    vec4 color;
    // = vec4(sin(pos.x + time)*cos(pos.y+2*time), 0, 0, 1);
    //float par = pos.y;

    float n = 0;
    n = (zCoord + 1)*PI/8;
    n /= 2;
    //n += time/6;
    n = mod(n, PI/2);

    float e1 = (5.0f/4.0f)*PI*pos.y + zCoord*PI/11;
    float e2 = 3.5f*PI*pos.x;

    vec4 hopf = vec4(cos((e1 + e2)/2)*sin(n), sin((e1 + e2)/2)*sin(n), cos((e2 - e1)/2)*cos(n), sin((e2 - e1)/2)*cos(n));
    
    imageStore(imgOutput, texCoords, hopf);
    imageStore(data, texCoords, hopf);
}//